J.U.C. 使用 demo. 后续添加使用. 总结及笔记详情见 MD 笔记.

说明 :
log.xxxx() ; 没有报错, 是因为 IDEA 装了lomb 插件, 此插件可以省略许多测试冗余代码, 很简便, 推荐使用.

com.mmall.concurrency.example.aqs:
    FutureExample  : future.get()

    FutureTaskExample :
        和FutureExample.java 例子代码大致同. 不同在于 : futureTask.get(); future.get()  结果说明 futureTask.get() 不会被阻塞.  看源码得知: 可以接收多种类型()
         {public FutureTask(Runnable runnable, V result)    | public FutureTask(Callable<V> callable) }

    ForkJoinTaskExample :
        Future<Integer> result = forkJoinPool.submit(ForkJoinTaskExample);
        ForkJoinTaskExample 是 extends RecursiveTask<Integer> { 复写了 compute 方法.
        大任务拆分成小任务.
         *  工作中涉及不多, 算法思想.工作窃取算法: 大任务切分为小子任务. 为减少线程竞争, 把任务放在队列中.
         *  局限性 : ①任务只能使用 fork , join 方法. ②不应执行 I/O 操作 ③  不能抛出检查异常
         *  使用时看不懂多看这两个例子.



com.mmall.concurrency.example.threadPool
        Executors.newCachedThreadPool
        Executors.newFixedThreadPool
        Executors.newScheduledThreadPool
        Executors.newSingleThreadExecutor 四个例子分别对应Executors.newxxxx 使用.  说明描述过程和结果.
        ❌ newScheduledThreadPool(10); 参数有疑问.见demo(3)